<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.devhub.pinchesystemback.mapper.UserMapper">
    <resultMap id="UserResultMap" type="com.devhub.pinchesystemback.domain.User">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="mobile" jdbcType="VARCHAR" property="mobile"/>
        <result column="sex" jdbcType="VARCHAR" property="sex"/>
        <result column="role" jdbcType="TINYINT" property="role"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="is_delete" jdbcType="TINYINT" property="isDelete"/>
    </resultMap>
    <resultMap id="UserVOResult" type="com.devhub.pinchesystemback.vo.UserVO">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="mobile" jdbcType="VARCHAR" property="mobile"/>
        <result column="sex" jdbcType="VARCHAR" property="sex"/>
        <result column="role" jdbcType="TINYINT" property="role"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from user
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into user (username, password, mobile, role)
        values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR},
                #{role,jdbcType=TINYINT})
    </insert >
    <insert id="insertUser" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into user (username, password, mobile, role)
        values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR},
                #{role,jdbcType=TINYINT})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.devhub.pinchesystemback.domain.User">
        update user
        <trim prefix="set" suffixOverrides=",">
            <if test="username != null and username.length() != 0">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="sex != null and sex.length() != 0">
                sex = #{sex,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null and mobile.length() != 0">
                mobile = #{mobile,jdbcType=VARCHAR}
            </if>
        </trim>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="UserResultMap">
        select id,
               username,
               password,
               mobile,
               sex,
               role,
               create_time,
               update_time,
               is_delete
        from user
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectAll" resultMap="UserResultMap">
        select id,
               username,
               password,
               mobile,
               sex,
               role,
               create_time,
               update_time,
               is_delete
        from user
    </select>
    <select id="selectVOById" resultMap="UserVOResult">
        select id, username, mobile, sex, role, create_time, update_time
        from user
        where id = #{id};
    </select>
    <select id="selectByUsername" resultType="com.devhub.pinchesystemback.domain.User">
        select *
        from user
        where username = #{username}
    </select>
    <select id="selectByOwnerIds" resultType="com.devhub.pinchesystemback.domain.User">
        select id, username, mobile, sex, role, create_time, update_time
        from user
        where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </select>
    <select id="selectAllOwners" resultType="com.devhub.pinchesystemback.domain.User">
        select *
        from user
        where role = 1;
    </select>
    <select id="selectOwnerByMobile" resultType="com.devhub.pinchesystemback.domain.User">
        select *
        from user
        where mobile = #{mobile}
          and role = 1;
    </select>
</mapper>